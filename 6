def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var50 = func2(arg1, arg2)
    var55 = func11(arg1, var50)
    var56 = arg2 ^ var50
    var57 = arg2 - ((-275 & -707) & var56)
    var58 = var50 | (302 + arg1) & var57
    var59 = (var56 & (arg1 & var56)) | 888524681
    var60 = var56 + var59
    if arg2 < var56:
        var61 = var58 & arg2 - var57
    else:
        var61 = var55 & (var58 | var50)
    var62 = var50 + var58
    var63 = var60 + var55 ^ var58 & var59
    var64 = var56 | arg2 + (var60 & var59)
    var65 = 795002072 ^ (-609 & var62 | var50)
    if arg1 < var55:
        var66 = arg1 ^ (var58 & var63)
    else:
        var66 = var64 & (var60 | var58 - var63)
    var67 = -495 - var57 ^ arg1 - var60
    var68 = var56 | var65 & -250907996 & var64
    var69 = (var59 + var50) + var65 ^ var56
    var70 = var59 | (var68 | var64) ^ var58
    var71 = var70 + ((var59 + var60) ^ var56)
    var72 = 235730170 + var62 ^ var65 - var67
    var73 = var55 | var63 & var71 - arg2
    var74 = (var58 & (var58 & var60)) | var60
    var75 = arg1 | var50
    result = var74 & var62 & var73 & (var60 - arg2 ^ var72 & ((var62 & var65) - -869504618) - arg1)
    return result
def func11(arg51, arg52):
    var53 = 430696891 - -2087568885
    var54 = (((-511 - var53) ^ 554) + (arg52 + arg51)) | 237 - arg51
    result = arg52 - (var54 ^ -30398237)
    return result
def func2(arg3, arg4):
    def func3(arg5, arg6):
        if arg5 < arg5:
            var11 = class4()
        else:
            var11 = class6()
        for var12 in range(5):
            var11.func5(arg3, arg5)
        var13 = (arg4 + arg3 + arg3) + 318
        var14 = ((-849777102 - arg4) - var13) - -905
        if arg3 < arg6:
            var15 = arg4 - arg6
        else:
            var15 = arg3 & 259
        var16 = (-1386811134 - -747) | var13
        var17 = -1266541405 & arg3
        if arg5 < var14:
            var18 = arg6 ^ (arg3 & var17)
        else:
            var18 = 399825079 + var14
        var19 = var13 + (arg3 & 591) + var14
        var20 = arg5 ^ -979 & 2088396785
        var21 = var19 & arg6 & var16
        var22 = var14 ^ arg6 - var20 - 1538823598
        var23 = (arg6 - var20 | var17) & var16
        var24 = -758 | (var19 ^ var23) + var21
        if var17 < var17:
            var25 = (var24 | var13) + var22 + arg3
        else:
            var25 = var19 | var19
        var26 = (var17 & -839 | arg3) & var24
        var27 = var14 + var22
        var28 = (var24 - var22 | var13) + var17
        if var28 < var16:
            var29 = arg3 - var22
        else:
            var29 = var21 & var27 & var21 & arg3
        var30 = ((var19 & var13) ^ var13) - var24
        var31 = var21 + var19
        var32 = ((var21 - var28) + var14) | arg3
        var33 = var28 + var21 | arg4 - -363711681
        var34 = arg3 & arg4 + arg6 - var28
        var35 = arg3 - 1936587682
        result = var26 ^ (var21 + var26) + (655 ^ var19)
        return result
    var36 = func3(arg4, arg3)
    var37 = func10()
    var38 = -1302256858 - var36
    var39 = arg3 & -644573452 | var37 & -431
    var40 = (arg3 - var39) | var38 + 274
    var41 = var39 | arg4
    var42 = arg3 - var37
    var43 = var40 ^ (arg3 + var39) & arg3
    var44 = var42 + var42
    var45 = 177 - var37 ^ var44 + var40
    var46 = var45 | arg4 + var36 | var42
    var47 = var36 - arg3
    var48 = arg4 + (var41 ^ var44 & var42)
    var49 = var46 ^ var46 + var37 | var44
    result = (var43 | 416748664) | var49
    return result
def func10():
    func8()
    result = len(range(27))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -7
class class6(object):
    def func5(self, arg9, arg10):
        result = arg9 | (-985175835 ^ -1 | 1) | arg10
        return result
class class4(object):
    def func5(self, arg7, arg8):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 76'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
